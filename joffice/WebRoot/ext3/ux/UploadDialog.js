Ext.namespace("Ext.ux.Utils");Ext.ux.Utils.EventQueue=function(c,d){if(!c){throw"Handler is required.";}this.handler=c;this.scope=d||window;this.queue=[];this.is_processing=false;this.postEvent=function(b,a){a=a||null;this.queue.push({event:b,data:a});if(!this.is_processing){this.process();}};this.flushEventQueue=function(){this.queue=[];},this.process=function(){while(this.queue.length>0){this.is_processing=true;var a=this.queue.shift();this.handler.call(this.scope,a.event,a.data);}this.is_processing=false;};};Ext.ux.Utils.FSA=function(f,d,e){this.current_state=f;this.trans_table=d||{};this.trans_table_scope=e||window;Ext.ux.Utils.FSA.superclass.constructor.call(this,this.processEvent,this);};Ext.extend(Ext.ux.Utils.FSA,Ext.ux.Utils.EventQueue,{current_state:null,trans_table:null,trans_table_scope:null,state:function(){return this.current_state;},processEvent:function(u,r){var m=this.currentStateEventTransitions(u);if(!m){throw"State '"+this.current_state+"' has no transition for event '"+u+"'.";}for(var q=0,o=m.length;q<o;q++){var n=m[q];var l=n.predicate||n.p||true;var s=n.action||n.a||Ext.emptyFn;var t=n.state||n.s||this.current_state;var i=n.scope||this.trans_table_scope;if(this.computePredicate(l,i,r,u)){this.callAction(s,i,r,u);this.current_state=t;return;}}throw"State '"+this.current_state+"' has no transition for event '"+u+"' in current context";},currentStateEventTransitions:function(b){return this.trans_table[this.current_state]?this.trans_table[this.current_state][b]||false:false;},computePredicate:function(n,l,j,k){var h=false;switch(Ext.type(n)){case"function":h=n.call(l,j,k,this);break;case"array":h=true;for(var m=0,i=n.length;h&&(m<i);m++){if(Ext.type(n[m])=="function"){h=n[m].call(l,j,k,this);}else{throw ["Predicate: ",n[m],' is not callable in "',this.current_state,'" state for event "',k].join("");}}break;case"boolean":h=n;break;default:throw ["Predicate: ",n,' is not callable in "',this.current_state,'" state for event "',k].join("");}return h;},callAction:function(i,l,j,k){switch(Ext.type(i)){case"array":for(var g=0,h=i.length;g<h;g++){if(Ext.type(i[g])=="function"){i[g].call(l,j,k,this);}else{throw ["Action: ",i[g],' is not callable in "',this.current_state,'" state for event "',k].join("");}}break;case"function":i.call(l,j,k,this);break;default:throw ["Action: ",i,' is not callable in "',this.current_state,'" state for event "',k].join("");}}});Ext.namespace("Ext.ux.UploadDialog");Ext.ux.UploadDialog.BrowseButton=Ext.extend(Ext.Button,{input_name:"file",input_file:null,original_handler:null,original_scope:null,initComponent:function(){Ext.ux.UploadDialog.BrowseButton.superclass.initComponent.call(this);this.original_handler=this.handler||null;this.original_scope=this.scope||window;this.handler=null;this.scope=null;},onRender:function(c,d){Ext.ux.UploadDialog.BrowseButton.superclass.onRender.call(this,c,d);this.createInputFile();},createInputFile:function(){var h=this.el;h.position("relative");this.input_file=Ext.DomHelper.insertAfter(h,{tag:"input",type:"file",size:1,name:this.input_name||Ext.id(this.el),style:"position: absolute; display: block; border: none; cursor: pointer"},true);var e=h.getBox();this.input_file.setStyle("font-size",(e.width*0.5)+"px");var g=this.input_file.getBox();var f={x:3,y:3};if(Ext.isIE){f={x:0,y:3};}this.input_file.setLeft(e.width-g.width+f.x+"px");this.input_file.setTop(e.height-g.height+f.y+"px");this.input_file.setOpacity(0);if(this.handleMouseEvents){this.input_file.on("mouseover",this.onMouseOver,this);this.input_file.on("mousedown",this.onMouseDown,this);}if(this.tooltip){if(typeof this.tooltip=="object"){Ext.QuickTips.register(Ext.apply({target:this.input_file},this.tooltip));}else{this.input_file.dom[this.tooltipType]=this.tooltip;}}this.input_file.on("change",this.onInputFileChange,this);this.input_file.on("click",function(a){a.stopPropagation();});},detachInputFile:function(c){var d=this.input_file;c=c||false;if(typeof this.tooltip=="object"){Ext.QuickTips.unregister(this.input_file);}else{this.input_file.dom[this.tooltipType]=null;}this.input_file.removeAllListeners();this.input_file=null;if(!c){this.createInputFile();}return d;},getInputFile:function(){return this.input_file;},disable:function(){Ext.ux.UploadDialog.BrowseButton.superclass.disable.call(this);this.input_file.dom.disabled=true;},enable:function(){Ext.ux.UploadDialog.BrowseButton.superclass.enable.call(this);this.input_file.dom.disabled=false;},destroy:function(){var b=this.detachInputFile(true);b.remove();b=null;Ext.ux.UploadDialog.BrowseButton.superclass.destroy.call(this);},onInputFileChange:function(){if(this.original_handler){this.original_handler.call(this.original_scope,this);}}});Ext.ux.UploadDialog.TBBrowseButton=Ext.extend(Ext.ux.UploadDialog.BrowseButton,{hideParent:true,onDestroy:function(){Ext.ux.UploadDialog.TBBrowseButton.superclass.onDestroy.call(this);if(this.container){this.container.remove();}}});Ext.ux.UploadDialog.FileRecord=Ext.data.Record.create([{name:"fileId",type:"int"},{name:"fileName"},{name:"filePath"},{name:"state",type:"int"},{name:"note"},{name:"input_element"}]);Ext.ux.UploadDialog.FileRecord.STATE_QUEUE=0;Ext.ux.UploadDialog.FileRecord.STATE_FINISHED=1;Ext.ux.UploadDialog.FileRecord.STATE_FAILED=2;Ext.ux.UploadDialog.FileRecord.STATE_PROCESSING=3;Ext.ux.UploadDialog.Dialog=function(d){var c={border:false,width:450,height:300,minWidth:450,minHeight:300,plain:true,constrainHeader:true,draggable:true,closable:true,maximizable:false,minimizable:false,resizable:true,autoDestroy:true,closeAction:"close",title:this.i18n.title,cls:"ext-ux-uploaddialog-dialog",url:"",base_params:{},permitted_extensions:[],reset_on_hide:true,allow_close_on_upload:false,upload_autostart:false};d=Ext.applyIf(d||{},c);d.layout="absolute";Ext.ux.UploadDialog.Dialog.superclass.constructor.call(this,d);};Ext.extend(Ext.ux.UploadDialog.Dialog,Ext.Window,{fsa:null,state_tpl:null,form:null,grid_panel:null,progress_bar:null,is_uploading:false,initial_queued_count:0,upload_frame:null,iconCls:"menu-file",file_cat:"others",callback:null,initComponent:function(){Ext.ux.UploadDialog.Dialog.superclass.initComponent.call(this);var b={"created":{"window-render":[{action:[this.createForm,this.createProgressBar,this.createGrid],state:"rendering"}],"destroy":[{action:this.flushEventQueue,state:"destroyed"}]},"rendering":{"grid-render":[{action:[this.fillToolbar,this.updateToolbar],state:"ready"}],"destroy":[{action:this.flushEventQueue,state:"destroyed"}]},"ready":{"file-selected":[{predicate:[this.fireFileTestEvent,this.isPermittedFile],action:this.addFileToUploadQueue,state:"adding-file"},{}],"grid-selection-change":[{action:this.updateToolbar}],"remove-files":[{action:[this.removeFiles,this.fireFileRemoveEvent]}],"reset-queue":[{action:[this.resetQueue,this.fireResetQueueEvent]}],"start-upload":[{predicate:this.hasUnuploadedFiles,action:[this.setUploadingFlag,this.saveInitialQueuedCount,this.updateToolbar,this.updateProgressBar,this.prepareNextUploadTask,this.fireUploadStartEvent],state:"uploading"},{}],"stop-upload":[{}],"hide":[{predicate:[this.isNotEmptyQueue,this.getResetOnHide],action:[this.resetQueue,this.fireResetQueueEvent]},{}],"destroy":[{action:this.flushEventQueue,state:"destroyed"}]},"adding-file":{"file-added":[{predicate:this.isUploading,action:[this.incInitialQueuedCount,this.updateProgressBar,this.fireFileAddEvent],state:"uploading"},{predicate:this.getUploadAutostart,action:[this.startUpload,this.fireFileAddEvent],state:"ready"},{action:[this.updateToolbar,this.fireFileAddEvent],state:"ready"}]},"uploading":{"file-selected":[{predicate:[this.fireFileTestEvent,this.isPermittedFile],action:this.addFileToUploadQueue,state:"adding-file"},{}],"grid-selection-change":[{}],"start-upload":[{}],"stop-upload":[{predicate:this.hasUnuploadedFiles,action:[this.resetUploadingFlag,this.abortUpload,this.updateToolbar,this.updateProgressBar,this.fireUploadStopEvent],state:"ready"},{action:[this.resetUploadingFlag,this.abortUpload,this.updateToolbar,this.updateProgressBar,this.fireUploadStopEvent,this.fireUploadCompleteEvent],state:"ready"}],"file-upload-start":[{action:[this.uploadFile,this.findUploadFrame,this.fireFileUploadStartEvent]}],"file-upload-success":[{predicate:this.hasUnuploadedFiles,action:[this.resetUploadFrame,this.updateRecordState,this.updateProgressBar,this.prepareNextUploadTask,this.fireUploadSuccessEvent]},{action:[this.resetUploadFrame,this.resetUploadingFlag,this.updateRecordState,this.updateToolbar,this.updateProgressBar,this.fireUploadSuccessEvent,this.fireUploadCompleteEvent],state:"ready"}],"file-upload-error":[{predicate:this.hasUnuploadedFiles,action:[this.resetUploadFrame,this.updateRecordState,this.updateProgressBar,this.prepareNextUploadTask,this.fireUploadErrorEvent]},{action:[this.resetUploadFrame,this.resetUploadingFlag,this.updateRecordState,this.updateToolbar,this.updateProgressBar,this.fireUploadErrorEvent,this.fireUploadCompleteEvent],state:"ready"}],"file-upload-failed":[{predicate:this.hasUnuploadedFiles,action:[this.resetUploadFrame,this.updateRecordState,this.updateProgressBar,this.prepareNextUploadTask,this.fireUploadFailedEvent]},{action:[this.resetUploadFrame,this.resetUploadingFlag,this.updateRecordState,this.updateToolbar,this.updateProgressBar,this.fireUploadFailedEvent,this.fireUploadCompleteEvent],state:"ready"}],"hide":[{predicate:this.getResetOnHide,action:[this.stopUpload,this.repostHide]},{}],"destroy":[{predicate:this.hasUnuploadedFiles,action:[this.resetUploadingFlag,this.abortUpload,this.fireUploadStopEvent,this.flushEventQueue],state:"destroyed"},{action:[this.resetUploadingFlag,this.abortUpload,this.fireUploadStopEvent,this.fireUploadCompleteEvent,this.flushEventQueue],state:"destroyed"}]},"destroyed":{}};this.fsa=new Ext.ux.Utils.FSA("created",b,this);this.addEvents({"filetest":true,"fileadd":true,"fileremove":true,"resetqueue":true,"uploadsuccess":true,"uploaderror":true,"uploadfailed":true,"uploadstart":true,"uploadstop":true,"uploadcomplete":true,"fileuploadstart":true});this.on("render",this.onWindowRender,this);this.on("beforehide",this.onWindowBeforeHide,this);this.on("hide",this.onWindowHide,this);this.on("destroy",this.onWindowDestroy,this);this.state_tpl=new Ext.Template("<div class='ext-ux-uploaddialog-state ext-ux-uploaddialog-state-{state}'>&#160;</div>").compile();},createForm:function(){this.form=Ext.DomHelper.append(this.body,{tag:"form",method:"post",action:this.url,style:"position: absolute; left: -100px; top: -100px; width: 100px; height: 100px"});},createProgressBar:function(){this.progress_bar=this.add(new Ext.ProgressBar({x:0,y:0,anchor:"0",value:0,text:this.i18n.progress_waiting_text}));},createGrid:function(){var c=new Ext.data.Store({proxy:new Ext.data.MemoryProxy([]),reader:new Ext.data.JsonReader({},Ext.ux.UploadDialog.FileRecord),sortInfo:{field:"state",direction:"DESC"},pruneModifiedRecords:true});var d=new Ext.grid.ColumnModel([{header:this.i18n.state_col_title,width:this.i18n.state_col_width,resizable:false,dataIndex:"state",sortable:true,renderer:this.renderStateCell.createDelegate(this)},{header:this.i18n.filename_col_title,width:this.i18n.filename_col_width,dataIndex:"filename",sortable:true,renderer:this.renderFilenameCell.createDelegate(this)},{header:this.i18n.note_col_title,width:this.i18n.note_col_width,dataIndex:"note",sortable:true,renderer:this.renderNoteCell.createDelegate(this)}]);this.grid_panel=new Ext.grid.GridPanel({ds:c,cm:d,x:0,y:22,anchor:"0 -22",border:true,viewConfig:{autoFill:true,forceFit:true},bbar:new Ext.Toolbar()});this.grid_panel.on("render",this.onGridRender,this);this.add(this.grid_panel);this.grid_panel.getSelectionModel().on("selectionchange",this.onGridSelectionChange,this);},fillToolbar:function(){var b=this.grid_panel.getBottomToolbar();b.x_buttons={};b.x_buttons.add=b.addItem(new Ext.ux.UploadDialog.TBBrowseButton({text:this.i18n.add_btn_text,tooltip:this.i18n.add_btn_tip,iconCls:"ext-ux-uploaddialog-addbtn",handler:this.onAddButtonFileSelected,scope:this}));b.x_buttons.remove=b.addButton({text:this.i18n.remove_btn_text,tooltip:this.i18n.remove_btn_tip,iconCls:"ext-ux-uploaddialog-removebtn",handler:this.onRemoveButtonClick,scope:this});b.x_buttons.reset=b.addButton({text:this.i18n.reset_btn_text,tooltip:this.i18n.reset_btn_tip,iconCls:"ext-ux-uploaddialog-resetbtn",handler:this.onResetButtonClick,scope:this});b.add("-");b.x_buttons.upload=b.addButton({text:this.i18n.upload_btn_start_text,tooltip:this.i18n.upload_btn_start_tip,iconCls:"ext-ux-uploaddialog-uploadstartbtn",handler:this.onUploadButtonClick,scope:this});b.add("-");b.x_buttons.indicator=b.addItem(new Ext.Toolbar.Item(Ext.DomHelper.append(b.getEl(),{id:"x-button-indicator",tag:"div",cls:"ext-ux-uploaddialog-indicator-stoped",html:"&#160"})));b.add("->");b.x_buttons.close=b.addButton({iconCls:"btn-ok",text:this.i18n.close_btn_text,tooltip:this.i18n.close_btn_tip,handler:this.onCloseButtonClick,scope:this});},renderStateCell:function(i,h,g,k,j,l){return this.state_tpl.apply({state:i});},renderFilenameCell:function(k,j,q,n,l,o){var f=this.grid_panel.getView();var m=function(){try{Ext.fly(f.getCell(n,l)).child(".x-grid3-cell-inner").dom["qtip"]=k;}catch(a){}};m.defer(1000);return k;},renderNoteCell:function(k,j,q,n,l,o){var f=this.grid_panel.getView();var m=function(){try{Ext.fly(f.getCell(n,l)).child(".x-grid3-cell-inner").dom["qtip"]=k;}catch(a){}};m.defer(1000);return k;},getFileExtension:function(d){var e=null;var f=d.split(".");if(f.length>1){e=f.pop();}return e;},isPermittedFileType:function(c){var d=true;if(this.permitted_extensions.length>0){d=this.permitted_extensions.indexOf(this.getFileExtension(c))!=-1;}return d;},isPermittedFile:function(f){var e=false;var d=f.getInputFile().dom.value;if(this.isPermittedFileType(d)){e=true;}else{Ext.Msg.alert(this.i18n.error_msgbox_title,String.format(this.i18n.err_file_type_not_permitted,d,this.permitted_extensions.join(this.i18n.permitted_extensions_join_str)));e=false;}return e;},fireFileTestEvent:function(b){return this.fireEvent("filetest",this,b.getInputFile().dom.value)!==false;},addFileToUploadQueue:function(f){var e=f.detachInputFile();e.appendTo(this.form);e.setStyle("width","100px");e.dom.disabled=true;var d=this.grid_panel.getStore();d.add(new Ext.ux.UploadDialog.FileRecord({state:Ext.ux.UploadDialog.FileRecord.STATE_QUEUE,filename:e.dom.value,note:this.i18n.note_queued_to_upload,input_element:e}));this.fsa.postEvent("file-added",e.dom.value);},fireFileAddEvent:function(b){this.fireEvent("fileadd",this,b);},updateProgressBar:function(){if(this.is_uploading){var c=this.getQueuedCount(true);var d=1-c/this.initial_queued_count;this.progress_bar.updateProgress(d,String.format(this.i18n.progress_uploading_text,this.initial_queued_count-c,this.initial_queued_count));}else{this.progress_bar.updateProgress(0,this.i18n.progress_waiting_text);}},updateToolbar:function(){var b=this.grid_panel.getBottomToolbar();if(this.is_uploading){b.x_buttons.remove.disable();b.x_buttons.reset.disable();b.x_buttons.upload.enable();if(!this.getAllowCloseOnUpload()){b.x_buttons.close.disable();}Ext.fly(b.x_buttons.indicator.getEl()).replaceClass("ext-ux-uploaddialog-indicator-stoped","ext-ux-uploaddialog-indicator-processing");b.x_buttons.upload.setIconClass("ext-ux-uploaddialog-uploadstopbtn");b.x_buttons.upload.setText(this.i18n.upload_btn_stop_text);b.x_buttons.upload.getEl().child(b.x_buttons.upload.buttonSelector).dom[b.x_buttons.upload.tooltipType]=this.i18n.upload_btn_stop_tip;}else{b.x_buttons.remove.enable();b.x_buttons.reset.enable();b.x_buttons.close.enable();Ext.fly(b.x_buttons.indicator.getEl()).replaceClass("ext-ux-uploaddialog-indicator-processing","ext-ux-uploaddialog-indicator-stoped");b.x_buttons.upload.setIconClass("ext-ux-uploaddialog-uploadstartbtn");b.x_buttons.upload.setText(this.i18n.upload_btn_start_text);if(this.getQueuedCount()>0){b.x_buttons.upload.enable();}else{b.x_buttons.upload.disable();}if(this.grid_panel.getSelectionModel().hasSelection()){b.x_buttons.remove.enable();}else{b.x_buttons.remove.disable();}if(this.grid_panel.getStore().getCount()>0){b.x_buttons.reset.enable();}else{b.x_buttons.reset.disable();}}},saveInitialQueuedCount:function(){this.initial_queued_count=this.getQueuedCount();},incInitialQueuedCount:function(){this.initial_queued_count++;},setUploadingFlag:function(){this.is_uploading=true;},resetUploadingFlag:function(){this.is_uploading=false;},prepareNextUploadTask:function(){var c=this.grid_panel.getStore();var d=null;c.each(function(a){if(!d&&a.get("state")==Ext.ux.UploadDialog.FileRecord.STATE_QUEUE){d=a;}else{a.get("input_element").dom.disabled=true;}});d.get("input_element").dom.disabled=false;d.set("state",Ext.ux.UploadDialog.FileRecord.STATE_PROCESSING);d.set("note",this.i18n.note_processing);d.commit();this.fsa.postEvent("file-upload-start",d);},fireUploadStartEvent:function(){this.fireEvent("uploadstart",this);},removeFiles:function(h){var f=this.grid_panel.getStore();for(var j=0,g=h.length;j<g;j++){var i=h[j];i.get("input_element").remove();f.remove(i);}},fireFileRemoveEvent:function(f){for(var d=0,e=f.length;d<e;d++){this.fireEvent("fileremove",this,f[d].get("filename"));}},resetQueue:function(){var b=this.grid_panel.getStore();b.each(function(a){a.get("input_element").remove();});b.removeAll();},fireResetQueueEvent:function(){this.fireEvent("resetqueue",this);},uploadFile:function(d){var c=this.base_params||this.baseParams||this.params;Ext.apply(c,{file_cat:this.file_cat});Ext.Ajax.request({url:this.url,params:c,method:"POST",form:this.form,isUpload:true,success:this.onAjaxSuccess,failure:this.onAjaxFailure,scope:this,record:d});},fireFileUploadStartEvent:function(b){this.fireEvent("fileuploadstart",this,b.get("filename"));},updateRecordState:function(b){if("success" in b.response&&b.response.success){b.record.set("state",Ext.ux.UploadDialog.FileRecord.STATE_FINISHED);b.record.set("note",b.response.message||b.response.error||this.i18n.note_upload_success);}else{b.record.set("state",Ext.ux.UploadDialog.FileRecord.STATE_FAILED);b.record.set("note",b.response.message||b.response.error||this.i18n.note_upload_error);}b.record.commit();},fireUploadSuccessEvent:function(b){this.fireEvent("uploadsuccess",this,b.record.get("filename"),b.response);},fireUploadErrorEvent:function(b){this.fireEvent("uploaderror",this,b.record.get("filename"),b.response);},fireUploadFailedEvent:function(b){this.fireEvent("uploadfailed",this,b.record.get("filename"));},fireUploadCompleteEvent:function(){this.fireEvent("uploadcomplete",this);},findUploadFrame:function(){this.upload_frame=Ext.getBody().child("iframe.x-hidden:last");},resetUploadFrame:function(){this.upload_frame=null;},removeUploadFrame:function(){if(this.upload_frame){this.upload_frame.removeAllListeners();this.upload_frame.dom.src="about:blank";this.upload_frame.remove();}this.upload_frame=null;},abortUpload:function(){this.removeUploadFrame();var c=this.grid_panel.getStore();var d=null;c.each(function(a){if(a.get("state")==Ext.ux.UploadDialog.FileRecord.STATE_PROCESSING){d=a;return false;}});d.set("state",Ext.ux.UploadDialog.FileRecord.STATE_FAILED);d.set("note",this.i18n.note_aborted);d.commit();},fireUploadStopEvent:function(){this.fireEvent("uploadstop",this);},repostHide:function(){this.fsa.postEvent("hide");},flushEventQueue:function(){this.fsa.flushEventQueue();},onWindowRender:function(){this.fsa.postEvent("window-render");},onWindowBeforeHide:function(){return this.isUploading()?this.getAllowCloseOnUpload():true;},onWindowHide:function(){this.fsa.postEvent("hide");},onWindowDestroy:function(){this.fsa.postEvent("destroy");},onGridRender:function(){this.fsa.postEvent("grid-render");},onGridSelectionChange:function(){this.fsa.postEvent("grid-selection-change");},onAddButtonFileSelected:function(b){this.fsa.postEvent("file-selected",b);},onUploadButtonClick:function(){if(this.is_uploading){this.fsa.postEvent("stop-upload");}else{this.fsa.postEvent("start-upload");}},onRemoveButtonClick:function(){var b=this.grid_panel.getSelectionModel().getSelections();this.fsa.postEvent("remove-files",b);},onResetButtonClick:function(){this.fsa.postEvent("reset-queue");},onCloseButtonClick:function(){var f=this.grid_panel.getStore();var h=new Array();for(var j=0;j<f.getCount();j++){var g=f.getAt(j);if(g.data.state==Ext.ux.UploadDialog.FileRecord.STATE_FINISHED){h.push(g.data);}}if(this.callback!=null){var i=this.scope?this.scope:this;this.callback.call(this,h);}this.close();},onAjaxSuccess:function(n,m){var i={"success":false,"error":this.i18n.note_upload_error};try{var e=n.responseText;var l=e.match(/^<[^>]+>((?:.|\n)*)<\/[^>]+>$/);if(l){e=l[1];}var i=Ext.util.JSON.decode(e);m.record.data.fileName=i.fileName;m.record.data.fileId=i.fileId;m.record.data.filePath=i.filePath;}catch(j){console.info(j);}var k={record:m.record,response:i};if(i.success==true){this.fsa.postEvent("file-upload-success",k);}else{this.fsa.postEvent("file-upload-error",k);}},onAjaxFailure:function(e,d){var f={record:d.record,response:{"success":false,"error":this.i18n.note_upload_failed}};this.fsa.postEvent("file-upload-failed",f);},startUpload:function(){this.fsa.postEvent("start-upload");},stopUpload:function(){this.fsa.postEvent("stop-upload");},getUrl:function(){return this.url;},setUrl:function(b){this.url=b;},getBaseParams:function(){return this.base_params;},setBaseParams:function(b){this.base_params=b;},getUploadAutostart:function(){return this.upload_autostart;},setUploadAutostart:function(b){this.upload_autostart=b;},getAllowCloseOnUpload:function(){return this.allow_close_on_upload;},setAllowCloseOnUpload:function(b){this.allow_close_on_upload;},getResetOnHide:function(){return this.reset_on_hide;},setResetOnHide:function(b){this.reset_on_hide=b;},getPermittedExtensions:function(){return this.permitted_extensions;},setPermittedExtensions:function(b){this.permitted_extensions=b;},isUploading:function(){return this.is_uploading;},isNotEmptyQueue:function(){return this.grid_panel.getStore().getCount()>0;},getQueuedCount:function(d){var f=0;var e=this.grid_panel.getStore();e.each(function(a){if(a.get("state")==Ext.ux.UploadDialog.FileRecord.STATE_QUEUE){f++;}if(d&&a.get("state")==Ext.ux.UploadDialog.FileRecord.STATE_PROCESSING){f++;}});return f;},hasUnuploadedFiles:function(){return this.getQueuedCount()>0;}});var p=Ext.ux.UploadDialog.Dialog.prototype;p.i18n={title:"上传文件",state_col_title:"状态",state_col_width:70,filename_col_title:"文件名",filename_col_width:230,note_col_title:"备注",note_col_width:150,add_btn_text:"添加",add_btn_tip:"添加文件到上传队列。",remove_btn_text:"删除",remove_btn_tip:"从上传队列删除文件。",reset_btn_text:"重置",reset_btn_tip:"重置队列。",upload_btn_start_text:"开始上传",upload_btn_stop_text:"中断上传",upload_btn_start_tip:"上传文件对列。",upload_btn_stop_tip:"停止上传。",close_btn_text:"确定",close_btn_tip:"关闭上传对话框。",progress_waiting_text:"等待...",progress_uploading_text:"上传中: {0} 的 {1} 文件集合成功。",error_msgbox_title:"错误",permitted_extensions_join_str:",",err_file_type_not_permitted:"不支持上传该类型文件.<br/>请选择下列类型的文件集合 {1}",note_queued_to_upload:"上传的队列。",note_processing:"上传中...",note_upload_failed:"当前请求过多，服务器正忙，不能及时响应或者因特网服务器发生错误。",note_upload_success:"成功。",note_upload_error:"上传文件出错。",note_aborted:"已经被用户中断"};