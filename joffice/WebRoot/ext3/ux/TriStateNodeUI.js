Ext.tree.TriStateNodeUI=Ext.extend(Ext.tree.TreeNodeUI,{onCheckChange:function(){Ext.tree.TriStateNodeUI.superclass.onCheckChange.apply(this,arguments);var b=this.node;while((b=b.parentNode)&&b.getUI().updateParent&&b.getUI().checkbox&&!b.getUI().isUpdating){b.getUI().updateParent();}},toggleCheck:function(){var b=Ext.tree.TriStateNodeUI.superclass.toggleCheck.apply(this,arguments);this.updateChild(b);return b;},renderElements:function(f,h,g,a){Ext.tree.TriStateNodeUI.superclass.renderElements.apply(this,arguments);this.updateChild(this.node.attributes.checked);},updateParent:function(){var b;this.node.eachChild(function(a){if(b===undefined){b=a.attributes.checked;}else{if(b!==a.attributes.checked){b=this.grayedValue;return false;}}},this);this.toggleCheck(b);},updateChild:function(b){if(typeof b=="boolean"){this.isUpdating=true;this.node.eachChild(function(a){a.getUI().toggleCheck(b);},this);delete this.isUpdating;}}});Ext.tree.AsynchTriStateNodeUI=Ext.extend(Ext.tree.TriStateNodeUI,{updateChild:function(b){if(this.checkbox){if(b===true){Ext.fly(this.ctNode).replaceClass("x-tree-branch-unchecked","x-tree-branch-checked");}else{if(b===false){Ext.fly(this.ctNode).replaceClass("x-tree-branch-checked","x-tree-branch-unchecked");}else{Ext.fly(this.ctNode).removeClass(["x-tree-branch-checked","x-tree-branch-unchecked"]);}}}},getChecked:function(){var b=this.node.parentNode?this.node.parentNode.ui.getChecked():this.grayedValue;return typeof b=="boolean"?b:Ext.tree.TriStateNodeUI.superclass.getChecked.call(this);}});